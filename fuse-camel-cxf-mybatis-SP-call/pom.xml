<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>br.net.rafaeltuelho</groupId>
	<artifactId>fuse-camel-cxf-mybatis-SP-call</artifactId>
	<packaging>bundle</packaging>
	<version>1.0.0-SNAPSHOT</version>

	<name>A Camel CXF Blueprint Route with camel-mybatis and Postgresql SP calls</name>
	<url>http://rafaeltuelho.net.br</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<camel.version>2.12.0.redhat-610379</camel.version>
		<!-- camel.version>2.15.0</camel.version -->
		<fabric8-maven-plugin.version>1.0.0.redhat-379</fabric8-maven-plugin.version>
		<postgresql.version>9.3.1101</postgresql.version>
		<dbcp.version>2.0.1</dbcp.version>
		<sl4j.version>1.7.7</sl4j.version>
		<log4j.version>1.2.17</log4j.version>
		<asm.version>4.1</asm.version>
		<osgi.version>4.3.1</osgi.version>
		<servlet.api.version>2.5</servlet.api.version>
		<cxf.version>2.7.0.redhat-610379</cxf.version>
	</properties>

	<dependencies>
		<!-- 
			To be able to use Camel Blueprint Test Support: mvn camel:run
			See: https://access.redhat.com/solutions/1128593
			
			NOTE: for some reason this dependency must be placed on top of all others
		 -->
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-all</artifactId>
			<version>${asm.version}</version>
		</dependency>

		<!-- Apache Camel -->	
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-blueprint</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-sql</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-mybatis</artifactId>
			<version>${camel.version}</version>
		</dependency>

        <!-- CXF -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-simple</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-management</artifactId>
            <version>${cxf.version}</version>
        </dependency>
						
		<!-- 
			OSGI
			See: https://access.redhat.com/solutions/499763	
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <version>${osgi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
        </dependency>		
		 -->

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${dbcp.version}</version>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-blueprint</artifactId>
			<version>${camel.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>${servlet.api.version}</version>
		</dependency>		

	</dependencies>

	<build>
		<defaultGoal>install</defaultGoal>

		<plugins>

			<!-- to generate source code from the wsdl file -->
			<plugin>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-codegen-plugin</artifactId>
				<version>3.0.4</version>
				<executions>
					<execution>
						<id>generate-sources</id>
						<phase>generate-sources</phase>
						<configuration>
							<sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
							<wsdlOptions>
								<wsdlOption>
									<wsdl>${basedir}/src/main/resources/wsdl/ds2/DVDStore.wsdl</wsdl>
									<wsdlLocation>wsdl/ds2/DVDStore.wsdl</wsdlLocation>
									<extraargs>
										<extraarg>-impl</extraarg>
									</extraargs>
								</wsdlOption>
							</wsdlOptions>
						</configuration>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/fabric8</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/fabric8</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- to generate the MANIFEST-FILE of the bundle -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.7</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>fuse-camel-cxf-mybatis-SP-call</Bundle-SymbolicName>
						<Private-Package>br.net.rafaeltuelho.*</Private-Package>
						<Import-Package>*</Import-Package>
					</instructions>
				</configuration>
				<!-- See: https://issues.apache.org/jira/browse/CAMEL-8326?focusedCommentId=14314191&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14314191 -->
				<executions>
				    <execution>
				      <id>bundle-manifest</id>
				      <phase>process-classes</phase>
				      <goals>
				        <goal>manifest</goal>
				      </goals>
				    </execution>
				  </executions>				
			</plugin>
			<!-- to run the example using mvn camel:run -->
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-maven-plugin</artifactId>
				<version>${camel.version}</version>
				<configuration>
					<useBlueprint>true</useBlueprint>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8-maven-plugin.version}</version>
				<configuration>
					<!-- See: https://access.redhat.com/documentation/en-US/Red_Hat_JBoss_Fuse/6.1/html/Fabric_Guide/F8Plugin-Props.html -->
					<jolokiaUrl>http://localhost:8181/jolokia</jolokiaUrl>
					<profile>MyDemos-Camel-CXF</profile>
					<version>1.0</version>
					<baseVersion>1.0</baseVersion>

					<!-- 
					
					
						jboss-fuse-minimal profile provides: 
							Repositories: 
								mvn:org.apache.servicemix.nmr/apache-servicemix-nmr/${version:servicemix-nmr}/xml/features 
								mvn:org.jboss.fuse/jboss-fuse/6.1.0.redhat-379/xml/features 
							
							Features: 
								camel-core 
								camel-jms 
								camel-spring 
								camel-jetty 
								camel-blueprint 
								jasypt-encryption 
								fabric-bundle 
								camel-jdbc 
								camel-jaxb 
					-->
					<parentProfiles>jboss-fuse-minimal</parentProfiles>
					<!-- 
						some features are already provided by parent profiles. 
						The other ones are specified here 
					-->
					<features>cxf camel-cxf camel-sql camel-mybatis</features>

					<!-- 
						as your Data Base's jdbc driver is not an OSGI bundle we have to use the Fuse wrap: protocol
					 -->
					<bundles>mvn:org.apache.commons/commons-dbcp2/2.0.1 mvn:org.apache.commons/commons-pool2/2.2 wrap:mvn:org.postgresql/postgresql/9.3.1101</bundles>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
